{"version":3,"sources":["icons/icon.svg","icons/search.svg","components/MP.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MP","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","postal","state","mp","undefined","console","log","concat","fetch","then","response","json","riding","mpList","representatives_centroid","filter","rep","elected_office","setState","react_default","a","createElement","Fragment","className","src","photo_url","alt","name","first_name","last_name","district_name","href","email","extra","twitter","target","rel","facebook","React","Component","App","value","submitted","handleReset","bind","assertThisInitialized","handleChange","handleSubmit","event","toUpperCase","preventDefault","MP_MP","forum","onSubmit","id","placeholder","type","onChange","maxLength","search","logo","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a4da1e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.9f2a74e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.bb597c23.svg\";","import React from 'react';\nimport './MP.scss';\n\nexport default class MP extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.postal = props.postal;\n    this.state = {mp: undefined};\n    console.log(`https://represent.opennorth.ca/postcodes/${this.postal}/`);\n    fetch(`https://represent.opennorth.ca/postcodes/${this.postal}/`)\n      .then(response => response.json())\n      .then(riding => {\n        let mpList = riding.representatives_centroid.filter(rep => rep.elected_office === 'MP');\n        this.setState({mp: mpList[0]});\n      });\n  }\n\n  render () {\n    return (<>\n      {!this.state.mp && (<>\n        <h1>Loading {this.postal}...</h1>\n      </>)}\n      {this.state.mp && (<>\n        <div className=\"mp-box\">\n          <div className=\"mp-header\">\n            <img className=\"mp-image\" src={this.state.mp.photo_url} alt={this.state.mp.name} />\n            <div className=\"mp-header-text\">\n              <h1 className=\"title-reg\">{this.state.mp.first_name} <span className=\"title-bold\">{this.state.mp.last_name}</span></h1>\n              <p>{this.state.mp.district_name}</p>\n            </div>\n          </div>\n          <a href={`mailto:${this.state.mp.email}`}><button className=\"mp-button\">Email</button></a>\n          {this.state.mp.extra.twitter && <a href={this.state.mp.extra.twitter} target=\"_blank\" rel=\"noreferrer noopener\"><button className=\"mp-button mp-button--blue\">Twitter</button></a>}\n          {this.state.mp.extra.facebook && <a href={this.state.mp.extra.facebook} target=\"_blank\" rel=\"noreferrer noopener\"><button className=\"mp-button mp-button--darkblue\">Facebook</button></a>}\n        </div>\n      </>)}\n    </>);\n  }\n\n}","import React from 'react';\nimport logo from './icons/icon.svg';\nimport search from './icons/search.svg';\nimport MP from './components/MP';\nimport './App.scss';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: '', submitted: false};\n\n    this.handleReset = this.handleReset.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleReset() {\n    this.setState({value: '', submitted: false});\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value.toUpperCase()});\n  }\n\n  handleSubmit(event) {\n    this.setState({submitted: true});\n    event.preventDefault();\n  }\n\n  render() {\n\n    let mp = this.state.submitted && <MP postal={this.state.value} />;\n\n    let forum = !this.state.submitted && (<><h1 className=\"title-reg\">Enter Your <span className=\"title-bold\">Postal Code</span>:</h1>\n      <form className=\"search-bar\" onSubmit={this.handleSubmit}>\n        <input className=\"App-postal title-bold\" name=\"postal\" id=\"postal\" placeholder=\"A1B2C3\" type=\"text\" \n        value={this.state.value} onChange={this.handleChange} maxLength=\"6\"></input>\n        <button><img src={search} alt=\"->\" /></button>\n      </form></>)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" onClick={this.handleReset}/>\n          <span>Email <span className=\"title-bold\">MPs</span></span>\n        </header>\n        <main className=\"App-main\">\n          {forum}\n          {mp}\n        </main>\n      </div>\n    );\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}